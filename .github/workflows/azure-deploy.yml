name: Build and Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure subscription
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Azure Storage Account
        run: |
          az storage account create --name demodockerappstorage --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --location ${{ secrets.AZURE_LOCATION }} --sku Standard_LRS

      - name: Retrieve Storage Account Key
        id: get-storage-key
        run: |
          echo "STORAGE_KEY=$(az storage account keys list --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --account-name demodockerappstorage --query '[0].value' --output tsv)" >> $GITHUB_ENV

      - name: Create Azure File Share
        run: |
          az storage share create --name demoappfileshare --account-name demodockerappstorage --account-key ${{ env.STORAGE_KEY }}

      - name: Set up Azure File Share volume in Web App settings
        run: |
          az webapp config appsettings set --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_WEBAPP_NAME }} --settings AZURE_STORAGE_ACCOUNT_KEY=${{ env.STORAGE_KEY }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker images
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          WEBAPP_STORAGE_HOME: /home
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Create Azure Resource Group
        run: |
          az group create --name ${{ secrets.AZURE_RESOURCE_GROUP }} --location ${{ secrets.AZURE_LOCATION }}

      - name: Create Azure App Service Plan
        run: |
          az appservice plan create --name ${{ secrets.AZURE_APP_SERVICE_PLAN }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --sku B1 --is-linux

      - name: Create Azure Web App for Containers
        run: |
          az webapp create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --plan ${{ secrets.AZURE_APP_SERVICE_PLAN }} --name ${{ secrets.AZURE_WEBAPP_NAME }} --multicontainer-config-type compose --multicontainer-config-file docker-compose.yml

      - name: Configure Azure Web App with Docker Compose
        run: |
          az webapp config container set --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --multicontainer-config-type compose --multicontainer-config-file docker-compose.yml
